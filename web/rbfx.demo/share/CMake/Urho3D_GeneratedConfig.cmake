# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.19)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget EASTL LZ4 PugiXml rapidjson STB IconFontCppHeaders CLI11 fmt spdlog SDL2-static ETCPACK tinygltf FreeType RmlUi glslang OGLCompiler OSDependent MachineIndependent GenericCodeGen glslang-default-resource-limits SPIRV spirv-cross-core spirv-cross-glsl spirv-cross-msl spirv-cross-hlsl SPIRV-Headers SPIRV-Tools-static SPIRV-Tools-opt ImGui datachannel-wasm Detour DetourCrowd DetourTileCache Recast Box2D WebP Bullet StanHull GLEW Diligent-BasicPlatform Diligent-BuildSettings Diligent-Common Diligent-EmscriptenPlatform Diligent-GraphicsAccessories Diligent-GraphicsEngine Diligent-GraphicsEngineInterface Diligent-GraphicsEngineOpenGL-static Diligent-GraphicsEngineOpenGLInterface Diligent-HLSL2GLSLConverterLib Diligent-PlatformInterface Diligent-Primitives Diligent-PublicBuildSettings Diligent-ShaderTools Urho3D PlayerLibrary)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target EASTL
add_library(EASTL STATIC IMPORTED)

set_target_properties(EASTL PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "EASTL_OPENSOURCE=1;EASTL_RTTI_ENABLED=0;EASTL_URHO3D_EXTENSIONS=1;EASTL_SIZE_T_32BIT=1;EASTDC_GLOBALPTR_SUPPORT_ENABLED=0;EASTDC_THREADING_SUPPORTED=0;EASTL_STD_ITERATOR_CATEGORY_ENABLED=1;EASTL_DEBUG=\$<OR:\$<CONFIG:Debug>,\$<CONFIG:RelWithDebInfo>>"
)

# Create imported target LZ4
add_library(LZ4 STATIC IMPORTED)

# Create imported target PugiXml
add_library(PugiXml STATIC IMPORTED)

# Create imported target rapidjson
add_library(rapidjson INTERFACE IMPORTED)

# Create imported target STB
add_library(STB STATIC IMPORTED)

set_target_properties(STB PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "STB_VORBIS_HEADER_ONLY=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/Urho3D/ThirdParty/STB"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/Urho3D/ThirdParty/STB"
)

# Create imported target IconFontCppHeaders
add_library(IconFontCppHeaders INTERFACE IMPORTED)

# Create imported target CLI11
add_library(CLI11 INTERFACE IMPORTED)

# Create imported target fmt
add_library(fmt STATIC IMPORTED)

set_target_properties(fmt PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "FMT_USE_RVALUE_REFERENCES=1;FMT_USE_VARIADIC_TEMPLATES=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/Urho3D/ThirdParty"
  INTERFACE_LINK_LIBRARIES "EASTL"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/Urho3D/ThirdParty"
)

# Create imported target spdlog
add_library(spdlog INTERFACE IMPORTED)

set_target_properties(spdlog PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SPDLOG_FMT_EXTERNAL=1;SPDLOG_DISABLE_DEFAULT_LOGGER=1"
  INTERFACE_LINK_LIBRARIES "fmt"
)

# Create imported target SDL2-static
add_library(SDL2-static STATIC IMPORTED)

set_target_properties(SDL2-static PROPERTIES
  COMPATIBLE_INTERFACE_BOOL "SDL2_SHARED"
  INTERFACE_COMPILE_OPTIONS "-sUSE_SDL=0"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/Urho3D/ThirdParty/SDL"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:m>;\$<LINK_ONLY:>;-s DISABLE_DEPRECATED_FIND_EVENT_TARGET_BEHAVIOR=0"
  INTERFACE_SDL2_SHARED "FALSE"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/Urho3D/ThirdParty/SDL"
)

# Create imported target ETCPACK
add_library(ETCPACK STATIC IMPORTED)

# Create imported target tinygltf
add_library(tinygltf STATIC IMPORTED)

set_target_properties(tinygltf PROPERTIES
  INTERFACE_LINK_LIBRARIES "STB"
)

# Create imported target FreeType
add_library(FreeType STATIC IMPORTED)

# Create imported target RmlUi
add_library(RmlUi STATIC IMPORTED)

set_target_properties(RmlUi PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "RMLUI_NO_THIRDPARTY_CONTAINERS=1;RMLUI_CUSTOM_CONFIGURATION_FILE=\"RmlUi/Config/RbfxConfig.h\";RMLUI_DEBUG_BUILD=\$<AND:\$<CONFIG:Debug>,\$<NOT:\$<BOOL:ON>>>;RMLUI_STATIC_LIB=1"
  INTERFACE_LINK_LIBRARIES "FreeType;EASTL"
)

# Create imported target glslang
add_library(glslang STATIC IMPORTED)

set_target_properties(glslang PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:OGLCompiler>;\$<LINK_ONLY:OSDependent>;\$<LINK_ONLY:MachineIndependent>"
)

# Create imported target OGLCompiler
add_library(OGLCompiler STATIC IMPORTED)

# Create imported target OSDependent
add_library(OSDependent STATIC IMPORTED)

set_target_properties(OSDependent PROPERTIES
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
)

# Create imported target MachineIndependent
add_library(MachineIndependent STATIC IMPORTED)

set_target_properties(MachineIndependent PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:OGLCompiler>;\$<LINK_ONLY:OSDependent>;\$<LINK_ONLY:GenericCodeGen>"
)

# Create imported target GenericCodeGen
add_library(GenericCodeGen STATIC IMPORTED)

# Create imported target glslang-default-resource-limits
add_library(glslang-default-resource-limits STATIC IMPORTED)

set_target_properties(glslang-default-resource-limits PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target SPIRV
add_library(SPIRV STATIC IMPORTED)

set_target_properties(SPIRV PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MachineIndependent>"
)

# Create imported target spirv-cross-core
add_library(spirv-cross-core STATIC IMPORTED)

set_target_properties(spirv-cross-core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/spirv_cross"
)

# Create imported target spirv-cross-glsl
add_library(spirv-cross-glsl STATIC IMPORTED)

set_target_properties(spirv-cross-glsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/spirv_cross"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:spirv-cross-core>"
)

# Create imported target spirv-cross-msl
add_library(spirv-cross-msl STATIC IMPORTED)

set_target_properties(spirv-cross-msl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/spirv_cross"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:spirv-cross-glsl>"
)

# Create imported target spirv-cross-hlsl
add_library(spirv-cross-hlsl STATIC IMPORTED)

set_target_properties(spirv-cross-hlsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/spirv_cross"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:spirv-cross-glsl>"
)

# Create imported target SPIRV-Headers
add_library(SPIRV-Headers INTERFACE IMPORTED)

# Create imported target SPIRV-Tools-static
add_library(SPIRV-Tools-static STATIC IMPORTED)

set_target_properties(SPIRV-Tools-static PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target SPIRV-Tools-opt
add_library(SPIRV-Tools-opt STATIC IMPORTED)

set_target_properties(SPIRV-Tools-opt PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SPIRV-Tools-static"
)

# Create imported target ImGui
add_library(ImGui STATIC IMPORTED)

set_target_properties(ImGui PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "IMGUI_DISABLE_OBSOLETE_FUNCTIONS=1;IMGUI_DEFINE_MATH_OPERATORS=1;USE_IMGUI_API=1"
  INTERFACE_LINK_LIBRARIES "SDL2-static;STB;FreeType;EASTL"
)

# Create imported target datachannel-wasm
add_library(datachannel-wasm STATIC IMPORTED)

# Create imported target Detour
add_library(Detour STATIC IMPORTED)

# Create imported target DetourCrowd
add_library(DetourCrowd STATIC IMPORTED)

set_target_properties(DetourCrowd PROPERTIES
  INTERFACE_LINK_LIBRARIES "Detour"
)

# Create imported target DetourTileCache
add_library(DetourTileCache STATIC IMPORTED)

set_target_properties(DetourTileCache PROPERTIES
  INTERFACE_LINK_LIBRARIES "Detour"
)

# Create imported target Recast
add_library(Recast STATIC IMPORTED)

# Create imported target Box2D
add_library(Box2D STATIC IMPORTED)

# Create imported target WebP
add_library(WebP STATIC IMPORTED)

# Create imported target Bullet
add_library(Bullet STATIC IMPORTED)

set_target_properties(Bullet PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/Urho3D/ThirdParty/Bullet"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/Urho3D/ThirdParty/Bullet"
)

# Create imported target StanHull
add_library(StanHull STATIC IMPORTED)

# Create imported target GLEW
add_library(GLEW STATIC IMPORTED)

set_target_properties(GLEW PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "GLEW_NO_GLU;GLEW_STATIC"
)

# Create imported target Diligent-BasicPlatform
add_library(Diligent-BasicPlatform STATIC IMPORTED)

set_target_properties(Diligent-BasicPlatform PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;Diligent-Primitives"
)

# Create imported target Diligent-BuildSettings
add_library(Diligent-BuildSettings INTERFACE IMPORTED)

set_target_properties(Diligent-BuildSettings PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<CONFIG:DEBUG>:_DEBUG;DEBUG>;\$<\$<CONFIG:RELEASE>:NDEBUG>;\$<\$<CONFIG:RELWITHDEBINFO>:NDEBUG>;\$<\$<CONFIG:MINSIZEREL>:NDEBUG>;__forceinline=inline"
  INTERFACE_COMPILE_OPTIONS "-Wall;-Wextra;-Wuninitialized;-Wconditional-uninitialized;-Wextra-tokens;-Wpointer-arith;-Wloop-analysis;-Wunused;-Wno-overloaded-virtual;-Wno-incompatible-pointer-types-discards-qualifiers;-Wno-unknown-pragmas;-Wno-zero-as-null-pointer-constant;-Wno-unused-parameter;\$<\$<CONFIG:DEBUG>:>;\$<\$<NOT:\$<CONFIG:Debug>>:-Wno-unused-variable>"
  INTERFACE_LINK_LIBRARIES "Diligent-PublicBuildSettings"
)

# Create imported target Diligent-Common
add_library(Diligent-Common STATIC IMPORTED)

set_target_properties(Diligent-Common PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;Diligent-EmscriptenPlatform"
)

# Create imported target Diligent-EmscriptenPlatform
add_library(Diligent-EmscriptenPlatform STATIC IMPORTED)

set_target_properties(Diligent-EmscriptenPlatform PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;Diligent-BasicPlatform;Diligent-PlatformInterface"
  INTERFACE_LINK_OPTIONS "SHELL: -s DISABLE_EXCEPTION_CATCHING=0'"
)

# Create imported target Diligent-GraphicsAccessories
add_library(Diligent-GraphicsAccessories STATIC IMPORTED)

set_target_properties(Diligent-GraphicsAccessories PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;Diligent-Common;Diligent-GraphicsEngineInterface"
)

# Create imported target Diligent-GraphicsEngine
add_library(Diligent-GraphicsEngine STATIC IMPORTED)

set_target_properties(Diligent-GraphicsEngine PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;Diligent-PlatformInterface;Diligent-Common;Diligent-GraphicsAccessories"
)

# Create imported target Diligent-GraphicsEngineInterface
add_library(Diligent-GraphicsEngineInterface INTERFACE IMPORTED)

set_target_properties(Diligent-GraphicsEngineInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "Diligent-Primitives;Diligent-PublicBuildSettings"
)

# Create imported target Diligent-GraphicsEngineOpenGL-static
add_library(Diligent-GraphicsEngineOpenGL-static STATIC IMPORTED)

set_target_properties(Diligent-GraphicsEngineOpenGL-static PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;\$<LINK_ONLY:Diligent-Common>;\$<LINK_ONLY:Diligent-EmscriptenPlatform>;\$<LINK_ONLY:Diligent-GraphicsEngine>;\$<LINK_ONLY:Diligent-ShaderTools>;Diligent-GraphicsEngineOpenGLInterface"
  INTERFACE_LINK_OPTIONS "SHELL: -s FULL_ES3=1 -s DISABLE_EXCEPTION_CATCHING=0"
)

# Create imported target Diligent-GraphicsEngineOpenGLInterface
add_library(Diligent-GraphicsEngineOpenGLInterface INTERFACE IMPORTED)

set_target_properties(Diligent-GraphicsEngineOpenGLInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "Diligent-GraphicsEngineInterface"
)

# Create imported target Diligent-HLSL2GLSLConverterLib
add_library(Diligent-HLSL2GLSLConverterLib STATIC IMPORTED)

set_target_properties(Diligent-HLSL2GLSLConverterLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;\$<LINK_ONLY:Diligent-Common>;\$<LINK_ONLY:Diligent-PlatformInterface>;\$<LINK_ONLY:Diligent-GraphicsEngine>;Diligent-GraphicsEngineInterface"
)

# Create imported target Diligent-PlatformInterface
add_library(Diligent-PlatformInterface INTERFACE IMPORTED)

# Create imported target Diligent-Primitives
add_library(Diligent-Primitives STATIC IMPORTED)

set_target_properties(Diligent-Primitives PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>"
)

# Create imported target Diligent-PublicBuildSettings
add_library(Diligent-PublicBuildSettings INTERFACE IMPORTED)

set_target_properties(Diligent-PublicBuildSettings PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PLATFORM_EMSCRIPTEN=1;D3D11_SUPPORTED=\$<BOOL:FALSE>;D3D12_SUPPORTED=\$<BOOL:FALSE>;GL_SUPPORTED=\$<BOOL:FALSE>;GLES_SUPPORTED=\$<BOOL:TRUE>;VULKAN_SUPPORTED=\$<BOOL:FALSE>;METAL_SUPPORTED=\$<BOOL:FALSE>"
)

# Create imported target Diligent-ShaderTools
add_library(Diligent-ShaderTools STATIC IMPORTED)

set_target_properties(Diligent-ShaderTools PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Diligent-BuildSettings>;\$<LINK_ONLY:Diligent-GraphicsAccessories>;\$<LINK_ONLY:Diligent-Common>;Diligent-GraphicsEngineInterface"
)

# Create imported target Urho3D
add_library(Urho3D STATIC IMPORTED)

set_target_properties(Urho3D PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "URHO3D_ACTIONS;URHO3D_CXX_STANDARD;URHO3D_DEBUG_ASSERT;URHO3D_ENABLE_ALL;URHO3D_HASH_DEBUG;URHO3D_IK;URHO3D_LOGGING;URHO3D_NAVIGATION;URHO3D_NETWORK;URHO3D_PACKAGING;URHO3D_PACKAGING;URHO3D_PARALLEL_BUILD;URHO3D_PARTICLE_GRAPH;URHO3D_PCH;URHO3D_PHYSICS;URHO3D_PHYSICS2D;URHO3D_RMLUI;URHO3D_SHADER_OPTIMIZER;URHO3D_SHADER_TRANSLATOR;URHO3D_SYSTEMUI;URHO3D_SYSTEMUI_VIEWPORTS;URHO3D_URHO2D;URHO3D_WEBP;NOMINMAX;URHO3D_DEBUG=\$<OR:\$<CONFIG:Debug>,\$<CONFIG:RelWithDebInfo>>;STB_VORBIS_HEADER_ONLY=1;IMGUI_DISABLE_OBSOLETE_FUNCTIONS=1;IMGUI_DEFINE_MATH_OPERATORS=1;USE_IMGUI_API=1;GLEW_NO_GLU;GLEW_STATIC;FMT_USE_RVALUE_REFERENCES=1;FMT_USE_VARIADIC_TEMPLATES=1;SPDLOG_FMT_EXTERNAL=1;SPDLOG_DISABLE_DEFAULT_LOGGER=1;EASTL_OPENSOURCE=1;EASTL_RTTI_ENABLED=0;EASTL_URHO3D_EXTENSIONS=1;EASTL_SIZE_T_32BIT=1;EASTDC_GLOBALPTR_SUPPORT_ENABLED=0;EASTDC_THREADING_SUPPORTED=0;EASTL_STD_ITERATOR_CATEGORY_ENABLED=1;EASTL_DEBUG=\$<OR:\$<CONFIG:Debug>,\$<CONFIG:RelWithDebInfo>>;RMLUI_NO_THIRDPARTY_CONTAINERS=1;RMLUI_CUSTOM_CONFIGURATION_FILE=\"RmlUi/Config/RbfxConfig.h\";RMLUI_DEBUG_BUILD=\$<AND:\$<CONFIG:Debug>,\$<NOT:\$<BOOL:ON>>>;RMLUI_STATIC_LIB=1;URHO3D_STATIC"
  INTERFACE_COMPILE_OPTIONS "-sUSE_SDL=0;\$<\$<OR:\$<CONFIG:Debug>,\$<CONFIG:RelWithDebInfo>>:-gsource-map;--source-map-base=.;-fdebug-compilation-dir='.';-gseparate-dwarf>;\$<\$<COMPILE_LANGUAGE:CXX>:-std=gnu++17>"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include/Urho3D/ThirdParty;${_IMPORT_PREFIX}/include/Urho3D/ThirdParty/SDL;${_IMPORT_PREFIX}/include/Urho3D/ThirdParty/STB;${_IMPORT_PREFIX}/include/Urho3D/ThirdParty"
  INTERFACE_LINK_LIBRARIES "datachannel-wasm;Bullet;\$<LINK_ONLY:FreeType>;\$<LINK_ONLY:LZ4>;\$<LINK_ONLY:PugiXml>;\$<LINK_ONLY:rapidjson>;-s DISABLE_DEPRECATED_FIND_EVENT_TARGET_BEHAVIOR=0;\$<LINK_ONLY:SDL2-static>;\$<LINK_ONLY:StanHull>;\$<LINK_ONLY:STB>;\$<LINK_ONLY:IconFontCppHeaders>;\$<LINK_ONLY:Detour>;\$<LINK_ONLY:DetourCrowd>;\$<LINK_ONLY:DetourTileCache>;\$<LINK_ONLY:Recast>;\$<LINK_ONLY:Box2D>;\$<LINK_ONLY:WebP>;\$<LINK_ONLY:ImGui>;\$<LINK_ONLY:GLEW>;\$<LINK_ONLY:CLI11>;\$<LINK_ONLY:fmt>;\$<LINK_ONLY:spdlog>;\$<LINK_ONLY:EASTL>;\$<LINK_ONLY:ETCPACK>;\$<LINK_ONLY:RmlUi>;\$<LINK_ONLY:tinygltf>;\$<LINK_ONLY:Diligent-Common>;\$<LINK_ONLY:Diligent-GraphicsEngineOpenGL-static>;\$<LINK_ONLY:Diligent-HLSL2GLSLConverterLib>;\$<LINK_ONLY:glslang>;\$<LINK_ONLY:glslang-default-resource-limits>;\$<LINK_ONLY:SPIRV>;\$<LINK_ONLY:spirv-cross-core>;\$<LINK_ONLY:spirv-cross-glsl>;\$<LINK_ONLY:spirv-cross-msl>;\$<LINK_ONLY:spirv-cross-hlsl>;\$<LINK_ONLY:SPIRV-Tools-static>;\$<LINK_ONLY:SPIRV-Tools-opt>;dl;-s WASM=\$<BOOL:EMSCRIPTEN_WASM>;-sFETCH;-sDISABLE_EXCEPTION_CATCHING=1;-sFORCE_FILESYSTEM=1;-sDISABLE_DEPRECATED_FIND_EVENT_TARGET_BEHAVIOR=0;-lidbfs.js;--bind;-s INITIAL_MEMORY=134217728;-s MIN_WEBGL_VERSION=2 -s MAX_WEBGL_VERSION=2 -s GL_ENABLE_GET_PROC_ADDRESS;-s FULL_ES3=1"
)

# Create imported target PlayerLibrary
add_library(PlayerLibrary STATIC IMPORTED)

set_target_properties(PlayerLibrary PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/Urho3D/Tools"
  INTERFACE_LINK_LIBRARIES "Urho3D"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/Urho3D_GeneratedConfig-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
